(ns advent-of-code-2019.day05-test
  (:require [advent-of-code-2019.day05 :as day05]
            [clojure.java.io :as io]
            [clojure.test :refer [deftest is are]]))

(def program
  (read-string (str \[ (slurp (io/resource "input05.txt")) \])))

(deftest part1-test
  (is (= [1002 4 3 4 99] (day05/run [1002,4,3,4,33])))
  (is (= "15314507" (day05/part1 program "1"))))

(deftest part2-test
  (are [program input expected] (= expected (day05/part2 program input))
    [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
    "0"
    "0"

    [3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9]
    "42"
    "1"

    [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
     1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
     999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
    "7"
    "999"

    [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
     1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
     999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
    "8"
    "1000"

    [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,
     1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,
     999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]
    "9"
    "1001")

  (is (= "652726" (day05/part2 program "5"))))
